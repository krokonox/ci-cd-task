name: Deploy to Staging

on:
  push:
    branches: main # Trigger the workflow on a push to the main branch

env:
  artifactName: buildArtifact # This must match the artifact name in the build-and-test workflow

jobs:
  build-and-test:
    uses: ./.github/workflows/build-and-test.yml
    secrets: inherit # Pass secrets to the build workflow, if necessary

  deploy-to-staging:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the new repository
        uses: actions/checkout@v4 # Update to v4

      - name: Download artifact
        uses: actions/download-artifact@v4 # Update to v4
        with:
          name: ${{ env.artifactName }}
          path: ./buildArtifact

      - name: List build artifact directory
        run: ls -la ./buildArtifact

      - name: Install dependencies in buildArtifact directory
        run: |
          cd ./buildArtifact
          npm install

      - name: Ensure valid project name
        id: ensure_valid_project_name
        run: |
          PROJECT_NAME=$(basename $(pwd))
          VALID_PROJECT_NAME=$(echo "$PROJECT_NAME" | tr '[:upper:]' '[:lower:]' | tr -cd 'a-z0-9._-' | sed 's/---//g')
          echo "Valid project name: $VALID_PROJECT_NAME"
          echo "::set-output name=project_name::$VALID_PROJECT_NAME"

      - name: Log request headers
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          curl -i -X POST https://api.vercel.com/v12/now/deployments \
            -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "name": "'${{ steps.ensure_valid_project_name.outputs.project_name }}'",
              "target": "staging",
              "builds": [],
              "env": {}
            }'

      - name: Deploy to Vercel (Staging)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          cd ./buildArtifact
          npx vercel --token ${{ secrets.VERCEL_TOKEN }} --yes --cwd ./ --debug
